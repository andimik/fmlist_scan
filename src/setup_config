
if [ -z "${FMLIST_SCAN_USER}" ]; then
  FMLIST_SCAN_USER="pi"
fi
if [ -z "${FMLIST_SCAN_RASPI}" ]; then
  FMLIST_SCAN_RASPI="1"
fi
if [ -z "${FMLIST_SCAN_SETUP_GPS}" ]; then
  export FMLIST_SCAN_SETUP_GPS="1"
fi
if [ "${FMLIST_SCAN_SETUP_GPS}" = "1" ]; then
  GPS_DEFAULT="auto"
else
  GPS_DEFAULT="static"
fi

if [ -z "${FMLIST_SCAN_MOUNT}" ]; then
  export FMLIST_SCAN_MOUNT="1"
fi
if [ -z "${FMLIST_SCAN_RESULT_DEV}" ]; then
  export FMLIST_SCAN_RESULT_DEV="/dev/sda1"
fi
if [ -z "${FMLIST_SCAN_RESULT_DIR}" ]; then
  export FMLIST_SCAN_RESULT_DIR="/mnt/sda1"
fi

sudo -u ${FMLIST_SCAN_USER} bash -c "mkdir -p /home/${FMLIST_SCAN_USER}/.config/fmlist_scan"

cat - <<EOF >/home/${FMLIST_SCAN_USER}/.config/fmlist_scan/config
export FMLIST_SCAN_PATH="$(pwd)/scanner"
export FMLIST_SCAN_USER="${FMLIST_SCAN_USER}"   # default OS user is "pi"
export FMLIST_SCAN_RASPI="${FMLIST_SCAN_RASPI}" # "0" or "1"; default is "1" for a Raspberry Pi hardware
export FMLIST_SCAN_SETUP_GPS="${FMLIST_SCAN_SETUP_GPS}"  # default "1" to activate gpsd and cronjob for user
export FMLIST_SCAN_GPS_LOOP_SLEEP="2"           # try to get gps coordinates every 2 sec
export FMLIST_USER="${FMLIST_USER}"             # optional: username (email) at https://www.fmlist.org/
export FMLIST_OM_ID="${FMLIST_OM_ID}"           # optional: OM id at https://www.fmlist.org/
export FMLIST_UP_COMMENT=""                     # optional comment
export FMLIST_SCAN_GPS_ALL_TIME="1"             # run gps all time
export FMLIST_SCAN_GPS_COORDS="${GPS_DEFAULT}"  # "gps" and "static" are exclusive; "auto" for gps if available, fallback to static
export FMLIST_SCAN_GPS_LAT=""               # latitude  for static, e.g. 48.885582
export FMLIST_SCAN_GPS_LON=""               # longitude for static, e.g. 8.702656
export FMLIST_SCAN_GPS_ALT=""               # altitude  for static, e.g. 307
export FMLIST_SCAN_DEAD_TIME="360"              # default is "300": assume something is hanging after 600 seconds
export FMLIST_SCAN_DEAD_RTL_TRIES="20"           # assume RTL dongle dead after N (=3) rtl recording tests
export FMLIST_SCAN_DEAD_REBOOT="1"              # "0" or "1"; default is "0". set "1" to rebooting when dead
export FMLIST_SCAN_AUTOSTART="0"                # default is "1": autostart scanner in background
export FMLIST_SCAN_FM="1"                       # "0" or "1"; default is "1" for active UKW/FM scan
export FMLIST_SCAN_DAB="1"                      # "0" or "1"; default is "1" for active DAB scan
export FMLIST_SCAN_TEST="1"                     # "0" or "1"; default is "1" for always testing the FM device
export FMLIST_SCAN_FM_MIN_PWR_RATIO="6.0"       # parameter to checkSpectrumForCarrier - now in dB
export FMLIST_SCAN_DAB_USE_PRESCAN="1"          # "0" or "1"; default is "1" for active prescanDAB
export FMLIST_SCAN_DAB_MIN_AUTOCORR="0.15"      # parameter '-C' to prescanDAB: autocorrelation threshold in 0 .. 1
export FMLIST_SCAN_SAVE_LOG_OPT="savelog"
export FMLIST_SCAN_SAVE_RAW="0"                 # "0" or "1"; default is "0". "1" activates saving raw I/Q data
export FMLIST_SCAN_SAVE_WAV="1"                 # "0" or "1"; default is "1". "1" convert raw files to .wav
export FMLIST_SCAN_SAVE_MINFREQ="87500000"      # raw I/Q saving in this frequency range
export FMLIST_SCAN_SAVE_MAXFREQ="108000000"
export FMLIST_SCAN_SAVE_MIN_MEM="300"           # raw I/Q saving only when free memory in MBytes >= this value
export FMLIST_SCAN_SAVE_RDSSPY="0"              # "0" or "1"; default is "0". keeps binary RDS Spy files produced from redsea
export FMLIST_SCAN_DEBUG="1"                    # "0" or "1"; default is "1". for producing extra logs
export FMLIST_SCAN_DEBUG_CHK_SPECTRUM="0"       # "0" or "1"; default is "0". keeps result files of checkSpectrumForCarrier
export FMLIST_SCAN_DEBUG_REDSEA="0"             # "0" or "1"; default is "0". keeps json result files of redsea
export FMLIST_SCAN_SAVE_PWMTONE="1"             # "0" or "1"; default is "1". for playing tones after each saving
export FMLIST_SCAN_SAVE_LEDPLAY="0"             # "0" or "1"; default is "0". for playing LEDs  after each saving
export FMLIST_SCAN_FOUND_PWMTONE="0"            # "0" or "1"; default is "0". for playing tones after each detected carrier
export FMLIST_SCAN_FOUND_LEDPLAY="1"            # "0" or "1"; default is "0". for playing LEDs  after each detected carrier
export FMLIST_SCAN_WPI_LED_GREEN="27"           # old atx cables wpi pin: 27, new/short cables pin: 28
export FMLIST_SCAN_WPI_LED_RED="26"             # 
export FMLIST_SCAN_PWM_FEEDBACK="1"             # "0" or "1"; default is "1" for signaling of FM/DAB scan success every scan
export FMLIST_SCAN_RAM_DIR="/dev/shm/${FMLIST_SCAN_USER}_fmlist_scan"  # /dev/shm is automatically mounted from linux
export FMLIST_SCAN_MOUNT="${FMLIST_SCAN_MOUNT}"                    # "0" or "1"; default is "1". saving results requires successful mount of /mnt/sda1
export FMLIST_SCAN_RESULT_DEV="${FMLIST_SCAN_RESULT_DEV}"       # which device to mount
export FMLIST_SCAN_RESULT_DIR="${FMLIST_SCAN_RESULT_DIR}"       # where to save results - in subfolder fmlist_scanner
export FMLIST_SCAN_SAVE_PARTIAL="0"             # copy/save partial results from ramdisk to FMLIST_SCAN_RESULT_DIR?
export FMLIST_FM_RTLSDR_DEV=""                  # FM:  optional device/serial, see rtl_test / rtl_eeprom
export FMLIST_FM_DEV_R820T="1"                  # "0" or "1"; default is "0". has the  FM-device an R820T/2 tuner?
export FMLIST_DAB_RTLSDR_DEV=""                 # DAB: optional device/serial
export FMLIST_DAB_DEV_R820T="1"                 # "0" or "1"; default is "0". has the DAB-device an R820T/2 tuner?
export FMLIST_SCAN_PPM="0"                      # ppm value of RTLSDR receiver
EOF


cat - <<EOF >/home/${FMLIST_SCAN_USER}/.config/fmlist_scan/fmscan.inc

# number of parallel jobs with gnu parallel : use multiple cores/threads of cpu
par_jobs="3"
# define ukw/fm band in Hz
ddc_step="100000"
ukw_beg="87500000"
ukw_end="108000000"

# default record chunk duration in seconds
chunkduration="4"

# chunk duration for selected channels - containing the selchunkfreqs
selchunkduration="10"
selchunkfreqs=( )

# chunksrate = 171 * 14 = 2394 kHz, keep this value high to avoid aliasing!
chunk2mpx_dec="14"

# common amongst different tuners is the HF gain. with R820T/2, this is LNA and Mixer.
#RTL_HF_GAIN="-g 20"   # activate this line for manual HF gain. with R820T/2, this is LNA and Mixer
RTL_HF_GAIN=""        # empty string activates the HF-AGC

# only the R820T/2 tuners support an IF gain: VGA behind LNA and Mixer
#RTL_IF_GAIN=""        # empty string activates defaults: +16.3 dB for manual gain. +26.5 dB for HF agc
RTL_IF_GAIN="ifm=0"   # this activates the AGC for the VGA - might sometimes hang on strong impulses
                      # in addition, you'll need to activate "dagc=1" to avoid oversteering
#RTL_IF_GAIN="ifm=200" # this sets ~ +20.0 dB in 10th dB. range is -4.7 to 40.8 dB

# all RTL2832U - have a digital AGC - after ADC, mixer, anti-alias-filter and down-sampling
#RTL_DAGC="dagc=0"     # switch off
RTL_DAGC="dagc=1"     # switch on - helps at oversteering

# als only for R820T/2 tuners: shift receive band 0 to 300 kHz in 100 kHz steps
#   this is in addition to to sideband swapping for every scan
USE_BCSHIFT="1"       # activate band shifting
#USE_BCSHIFT="0"       # deactivate band shifting


# end of user settings
############################################################################


# switch tuner sideband with every scan - this is only used with the R820T
if [ -z "\${FMSCAN_NO}" ]; then
  SBOPT=""
  BCMUL="-1"   # default is LSB .. where steep low pass is at low frequency. let high pass run over right band
else
  SB=\$[ \${FMSCAN_NO} % 2 ]
  SBOPT="sb=\${SB}"
  # -1 for LSB with SB=0,  +1 for USB with SB=1
  BCMUL=\$[ \${SB} * 2 - 1 ]
fi

# deactivate band center depending on tuner sideband
# BCMUL="1"


# initialize/clear asymetric filter.
# fill in the first/last stations frequency - relative to center/LO
# that is flat bandwidth region .. each side reduced by ~ 100 kHz
mpxsrate_chunkbw_factor="3"
center_beg=""
center_last=""
RTLC="0"
BCSHIFT="0"    # can't be use without suitable tuner

# good R820T bws:
#  290 kHz @ 600 kHz: 530 .. 670 kHz: 2 channels
#  375 kHz @ 600 kHz: 488 .. 712 kHz: 3 channels
#  420 kHz @ 600 kHz: 465 .. 735 kHz: 3 channels
#  470 kHz @ 600 kHz: 440 .. 760 kHz: 4 channels
#  600 kHz @ 600 kHz: 375 .. 825 kHz: 5 channels
#  860 kHz @ 600 kHz: 245 .. 955 kHz: 8 channels
#  950 kHz @ 500 kHz: 100 .. 900 kHz: 9 channels
# 1100 kHz @ 0
# 1300 kHz @ 0
# 1500 kHz @ 0
# 1600 kHz @ 0
# 1750 kHz @ 0


if [ "\${FMLIST_FM_DEV_R820T}" = "1" ]; then
  # this section is for the R820T/2 tuner
  RTLBW="950"
  RTLC="500"

  if [ "\${GPSSRC}" = "static" ]; then
    # spend more time on scanning in static environment
    chunkduration="6"
    RTLBW="600"
    RTLC="600"
  fi

  # band center shift
  SCANMOD=\$[ ( \${FMSCAN_NO} % 8 ) / 2 ]
  BCSHIFT=\$[ \${USE_BCSHIFT} * \${SCANMOD} * 100 ]

  if [ -z "\${RTL_HF_GAIN}" ]; then
    RTLSDR_OPT="-O verbose:T=0:bw=\${RTLBW}:bc=\${RTLC}000:agc=1:\${RTL_IF_GAIN}:\${RTL_DAGC}:\${SBOPT}"
  else
    RTLSDR_OPT="\${RTL_HF_GAIN} -O verbose:T=0:bw=\${RTLBW}:bc=\${RTLC}000:\${RTL_IF_GAIN}:\${RTL_DAGC}:\${SBOPT}"
  fi

else
  # this section is for non-R820T/2 tuners like E4000 or FC0013 or ..

  RTLBW="1800"

  if [ "\${GPSSRC}" = "static" ]; then
    # spend more time on scanning in static environment
    chunkduration="6"
    RTLBW="1200"
  fi

  if [ -z "\${RTL_HF_GAIN}" ]; then
    RTLSDR_OPT="-O verbose:T=0:bw=\${RTLBW}:agc=1:\${RTL_DAGC}"
  else
    RTLSDR_OPT="\${RTL_HF_GAIN} -O verbose:T=0:bw=\${RTLBW}:\${RTL_DAGC}"
  fi

fi

RTL_BW_OPT="-w \${RTLBW}000"

if [ ! -z "\${FMLIST_FM_RTLSDR_DEV}" ]; then
  RTLSDR_OPT="\${RTLSDR_OPT} -d \${FMLIST_FM_RTLSDR_DEV}"
fi

center_beg=\$[  ( \${BCMUL} * ( \${RTLC} - \${BCSHIFT} ) - \${RTLBW} / 2 + 75 ) * 1000 ]
center_last=\$[ ( \${BCMUL} * ( \${RTLC} - \${BCSHIFT} ) + \${RTLBW} / 2 - 75 ) * 1000 ]

EOF

cat - <<EOF >/home/${FMLIST_SCAN_USER}/.config/fmlist_scan/dabscan.inc

# common amongst different tuners is the HF gain. with R820T/2, this is LNA and Mixer.
#RTL_HF_GAIN="gain=200"  # activate this line for manual HF gain. with R820T/2, this is LNA and Mixer
RTL_HF_GAIN=""          # empty string activates the AGC

# only the R820T/2 tuners support an IF gain: VGA behind LNA and Mixer
#RTL_IF_GAIN=""        # empty string activates defaults: +16.3 dB for manual gain. +26.5 dB for HF agc
RTL_IF_GAIN="ifm=0"   # this activates the AGC for the VGA - might sometimes hang on strong impulses.
                      # in addition, you'll need to activate "dagc=1" to avoid oversteering
#RTL_IF_GAIN="ifm=200" # this sets ~ +20.0 dB in 10th dB. range is -4.7 to 40.8 dB

# all RTL2832U - have a digital AGC - after ADC, mixer, anti-alias-filter and down-sampling
#RTL_DAGC="dagc=0"     # switch off
RTL_DAGC="dagc=1"     # switch on - helps at oversteering


# end of user settings
############################################################################



# file with channels to scan
chanlist="dab_chanlist.txt"

# verifiable TII (statistics without '-x' option) requires much time: that is why to increase -A from 2000 to 12000
#   with option '-x', activation enhanced tii algorithm with quality values, reduced -A to 6000 ms
#   options -t,  -a and -r specify how tii statistics should work ..

if [ -z "\${DABSCAN_NO}" ]; then
  SBOPT=""
else
  SB=\$[ \${DABSCAN_NO} % 2 ]
  SBOPT="sb=\${SB}"
fi

if [ -z "\${RTL_HF_GAIN}" ]; then
  DABGAIN="-Q"
  RTLGAIN="agc=1"
else
  DABGAIN="-G -1"    # use gain through -O option
  RTLGAIN="agc=0:\${RTL_HF_GAIN}"
fi


# softdeadtime=2:softscantime=20:softagc=0
RTLOPT="-O verbose:T=0:\${RTLGAIN}:\${RTL_IF_GAIN}:\${RTL_DAGC}:bw=1600:\${SBOPT}"

DABOPT="\${DABGAIN} -E 3 -W 5000 -A 6000 -c -t 5 -a 0.8 -r 5 -x \${RTLOPT}"
DABPRESCANOPT="\${RTLOPT}"
DABLISTENOPT="\${DABGAIN} -t 40 -a 0.95 -r 40 -x \${RTLOPT}"

if [ "\${GPSSRC}" = "static" ]; then
  # spend more time on scanning in static environment
  DABOPT="\${DABGAIN} -E 3 -W 8000 -A 12000 -c -t 10 -a 0.9 -r 10 -x \${RTLOPT}"
fi


# select rtlsdr device with option '-s <serial>'.
#   program 'rtl_test' will list all devices with their serial numbers 'SN'.
#   in case your serial numbers are not unique, you can modify these with 'rtl_eeprom'.
#   reuse devicename from config: \${FMLIST_DAB_RTLSDR_DEV}

if [ ! -z "\${FMLIST_DAB_RTLSDR_DEV}" ]; then
  DABOPT="\${DABOPT} -s \${FMLIST_DAB_RTLSDR_DEV}"
  DABPRESCANOPT="\${DABPRESCANOPT} -d \${FMLIST_DAB_RTLSDR_DEV}"
  DABLISTENOPT="\${DABLISTENOPT} -s \${FMLIST_DAB_RTLSDR_DEV}"
fi

EOF


cat - <<EOF >/home/${FMLIST_SCAN_USER}/.config/fmlist_scan/dab_chanlist.txt
5A
5B
5C
5D
6A
6B
6C
6D
7A
7B
7C
7D
8A
8B
8C
8D
9A
9B
9C
9D
10A
10B
10C
10D
11A
11B
11C
11D
12A
12B
12C
12D
13A
13B
13C
13D
13E
13F
EOF


chown ${FMLIST_SCAN_USER}:${FMLIST_SCAN_USER} /home/${FMLIST_SCAN_USER}/.config/fmlist_scan/config
chown ${FMLIST_SCAN_USER}:${FMLIST_SCAN_USER} /home/${FMLIST_SCAN_USER}/.config/fmlist_scan/fmscan.inc
chown ${FMLIST_SCAN_USER}:${FMLIST_SCAN_USER} /home/${FMLIST_SCAN_USER}/.config/fmlist_scan/dabscan.inc
chown ${FMLIST_SCAN_USER}:${FMLIST_SCAN_USER} /home/${FMLIST_SCAN_USER}/.config/fmlist_scan/dab_chanlist.txt

