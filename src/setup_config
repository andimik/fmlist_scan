
if [ -z "${FMLIST_SCAN_USER}" ]; then
  FMLIST_SCAN_USER="pi"
fi
if [ -z "${FMLIST_SCAN_RASPI}" ]; then
  FMLIST_SCAN_RASPI="1"
fi
if [ -z "${FMLIST_SCAN_SETUP_GPS}" ]; then
  export FMLIST_SCAN_SETUP_GPS="1"
fi


if [ "${FMLIST_SCAN_SETUP_GPS}" = "1" ]; then
  GPS_DEFAULT="auto"
else
  GPS_DEFAULT="static"
fi

sudo -u ${FMLIST_SCAN_USER} bash -c "mkdir -p /home/${FMLIST_SCAN_USER}/.config/fmlist_scan"

cat - <<EOF >/home/${FMLIST_SCAN_USER}/.config/fmlist_scan/config
export FMLIST_SCAN_PATH="$(pwd)/scanner"
export FMLIST_SCAN_USER="${FMLIST_SCAN_USER}"   # default OS user is "pi"
export FMLIST_SCAN_RASPI="${FMLIST_SCAN_RASPI}" # "0" or "1"; default is "1" for a Raspberry Pi hardware
export FMLIST_SCAN_SETUP_GPS="${FMLIST_SCAN_SETUP_GPS}"  # default "1" to activate gpsd and cronjob for user
export FMLIST_SCAN_GPS_LOOP_SLEEP="2"           # try to get gps coordinates every 2 sec
export FMLIST_USER="${FMLIST_USER}"             # optional: username (email) at https://www.fmlist.org/
export FMLIST_OM_ID="${FMLIST_OM_ID}"           # optional: OM id at https://www.fmlist.org/
export FMLIST_SCAN_GPS_COORDS="${GPS_DEFAULT}"  # "gps" and "static" are exclusive; "auto" for gps if available, fallback to static
export FMLIST_SCAN_GPS_LAT=""               # latitude  for static, e.g. 48.885582
export FMLIST_SCAN_GPS_LON=""               # longitude for static, e.g. 8.702656
export FMLIST_SCAN_GPS_ALT=""               # altitude  for static, e.g. 307
export FMLIST_SCAN_DEAD_TIME="600"              # default is "600": assume something is hanging after 600 seconds
export FMLIST_SCAN_DEAD_RTL_TRIES="10"           # assume RTL dongle dead after N (=3) rtl recording tests
export FMLIST_SCAN_DEAD_REBOOT="0"              # "0" or "1"; default is "0" for rebooting when dead
export FMLIST_SCAN_AUTOSTART="0"                # default is "1": autostart scanner in background
export FMLIST_SCAN_FM="1"                       # "0" or "1"; default is "1" for active UKW/FM scan
export FMLIST_SCAN_DAB="1"                      # "0" or "1"; default is "1" for active DAB scan
export FMLIST_SCAN_FM_MIN_PWR_RATIO="6.0"       # parameter to checkSpectrumForCarrier - now in dB
export FMLIST_SCAN_DAB_USE_PRESCAN="1"          # "0" or "1"; default is "1" for active prescanDAB
export FMLIST_SCAN_DAB_MIN_AUTOCORR="0.15"      # parameter '-C' to prescanDAB: autocorrelation threshold in 0 .. 1
export FMLIST_SCAN_SAVE_LOG_OPT="savelog"
export FMLIST_SCAN_SAVE_RAW="0"                 # "0" or "1"; default is "0". "1" activates saving raw I/Q data
export FMLIST_SCAN_SAVE_MINFREQ="87500000"      # raw I/Q saving in this frequency range
export FMLIST_SCAN_SAVE_MAXFREQ="108000000"
export FMLIST_SCAN_SAVE_MIN_MEM="300"           # raw I/Q saving only when free memory in MBytes >= this value
export FMLIST_SCAN_DEBUG="1"                    # "0" or "1"; default is "1". for producing extra logs
export FMLIST_SCAN_DEBUG_CHK_SPECTRUM="0"       # "0" or "1"; default is "0". keeps result files of checkSpectrumForCarrier
export FMLIST_SCAN_DEBUG_REDSEA="0"             # "0" or "1"; default is "0". keeps json result files of redsea
export FMLIST_SCAN_SAVE_PWMTONE="1"             # "0" or "1"; default is "1". for playing tones after each saving
export FMLIST_SCAN_SAVE_LEDPLAY="0"             # "0" or "1"; default is "0". for playing LEDs  after each saving
export FMLIST_SCAN_FOUND_PWMTONE="0"            # "0" or "1"; default is "0". for playing tones after each detected carrier
export FMLIST_SCAN_FOUND_LEDPLAY="1"            # "0" or "1"; default is "0". for playing LEDs  after each detected carrier
export FMLIST_SCAN_PWM_FEEDBACK="1"             # "0" or "1"; default is "1" for signaling of FM/DAB scan success every scan
export FMLIST_SCAN_RAM_DIR="/dev/shm/${FMLIST_SCAN_USER}_fmlist_scan"  # /dev/shm is automatically mounted from linux
export FMLIST_SCAN_MOUNT="1"                    # "0" or "1"; default is "1". saving results requires successful mount of /mnt/sda1
export FMLIST_SCAN_RESULT_DEV="/dev/sda1"       # which device to mount
export FMLIST_SCAN_RESULT_DIR="/mnt/sda1"       # where to save results
export FMLIST_SCAN_PPM="0"                      # ppm value of RTLSDR receiver
export FMLIST_FM_RTLSDR_DEV=""                  # FM:  optional device/serial, see rtl_test / rtl_eeprom
export FMLIST_DAB_RTLSDR_DEV=""                 # DAB: optional device/serial
EOF


cat - <<EOF >/home/${FMLIST_SCAN_USER}/.config/fmlist_scan/fmscan.inc

# number of parallel jobs with gnu parallel : use multiple cores/threads of cpu
par_jobs="3"
# define ukw/fm band in Hz
ddc_step="100000"
ukw_beg="87500000"
ukw_end="108000000"

# record chunk duration in seconds
chunkduration="4"

# chunksrate = 171 * 14 = 2394 kHz, keep this value high to avoid aliasing!
chunk2mpx_dec="14"

# R820T tuner bandwidths in kHz: 350, 450, 550, 700, 900, 1200, 1450, 1550, 1600, 1700, 1800, 1900, 1950, 2050, 2080
# RTL_BW_OPTs measured with white noise generator at ~100 MHz to be still flat (< 1 dB to next missing channel, if possible)
# mpxsrate_chunkbw_factor="2";  RTL_BW_OPT="-w 450000"  # +/- 50000 Hz, N= 2,  chunkbw=  342 kHz (=factor*171 kHz)
# mpxsrate_chunkbw_factor="3";  RTL_BW_OPT="-w 550000"  # +/-150000 Hz, N= 4,  chunkbw=  513 kHz; chunkduration=4 => sec, 22 RDS +36 plain carriers; s, 21+29; minT=52*4=s
# mpxsrate_chunkbw_factor="4";  RTL_BW_OPT="-w 900000"  # +/-250000 Hz, N= 6,  chunkbw=  684 kHz; chunkduration=4 => sec, 21 RDS +31 plain carriers; s, 20+28; minT=35*4=s
#[mpxsrate_chunkbw_factor="5";  RTL_BW_OPT="-w 1200000" # +/-350000 Hz, N= 8,  chunkbw=  855 kHz] => same filter bw!
#[mpxsrate_chunkbw_factor="6";  RTL_BW_OPT="-w 1200000" # +/-450000 Hz, N= 10, chunkbw= 1026 kHz] => same filter bw!
# mpxsrate_chunkbw_factor="7";  RTL_BW_OPT="-w 1200000" # +/-450000 Hz, N= 10, chunkbw= 1197 kHz; chunkduration=4 => sec, 20 RDS +26 plain carriers; s, 17+30; minT=21*4=s
# mpxsrate_chunkbw_factor="8";  RTL_BW_OPT="-w 1450000" # +/-550000 Hz, N= 12, chunkbw= 1368 kHz; chunkduration=4 => sec, 19 RDS +23 plain carriers; s, 19+26; minT=18*4=s
# mpxsrate_chunkbw_factor="9";  RTL_BW_OPT="-w 1600000" # +/-650000 Hz, N= 14, chunkbw= 1539 kHz; chunkduration=4 => sec, 19 RDS +26 plain carriers; s, 18+27; minT=15*4=s
# mpxsrate_chunkbw_factor="10"; RTL_BW_OPT="-w 1800000" # +/-750000 Hz, N= 16, chunkbw= 1710 kHz; chunkduration=4 => 81sec, 14 RDS +35 plain carriers; 86s, 17+41; minT=13*4=52s
# mpxsrate_chunkbw_factor="11"; RTL_BW_OPT="-w 2080000" # +/-850000 Hz, N= 18, chunkbw= 1881 kHz; chunkduration=4 => 74sec, 15 RDS +31 plain carriers; 74s, 14+26; minT=12*4=48s

mpxsrate_chunkbw_factor="10"; RTL_BW_OPT="-w 1800000"    # +/-750000 Hz, N = 16, chunkbw = 1710 kHz

if [ "\${GPSSRC}" = "static" ]; then
  # spend more time on scanning in static environment
  chunkduration="8"

# mpxsrate_chunkbw_factor="2";  RTL_BW_OPT="-w 450000"  # +/- 50000 Hz, N= 2,  chunkbw=  342 kHz (=factor*171 kHz)
# mpxsrate_chunkbw_factor="3";  RTL_BW_OPT="-w 550000"  # +/-150000 Hz, N= 4,  chunkbw=  513 kHz; chunkduration=8 => 492sec, 22 RDS +36 plain carriers; 493s, 21+29; minT=52*8=416s
# mpxsrate_chunkbw_factor="4";  RTL_BW_OPT="-w 900000"  # +/-250000 Hz, N= 6,  chunkbw=  684 kHz; chunkduration=8 => 332sec, 21 RDS +31 plain carriers; 332s, 20+28; minT=35*8=280s
#[mpxsrate_chunkbw_factor="5";  RTL_BW_OPT="-w 1200000" # +/-350000 Hz, N= 8,  chunkbw=  855 kHz] => same filter bw!
#[mpxsrate_chunkbw_factor="6";  RTL_BW_OPT="-w 1200000" # +/-450000 Hz, N= 10, chunkbw= 1026 kHz] => same filter bw!
# mpxsrate_chunkbw_factor="7";  RTL_BW_OPT="-w 1200000" # +/-450000 Hz, N= 10, chunkbw= 1197 kHz; chunkduration=8 => 200sec, 20 RDS +26 plain carriers; 199s, 17+30; minT=21*8=168s
# mpxsrate_chunkbw_factor="8";  RTL_BW_OPT="-w 1450000" # +/-550000 Hz, N= 12, chunkbw= 1368 kHz; chunkduration=8 => 173sec, 19 RDS +23 plain carriers; 176s, 19+26; minT=18*8=144s
# mpxsrate_chunkbw_factor="9";  RTL_BW_OPT="-w 1600000" # +/-650000 Hz, N= 14, chunkbw= 1539 kHz; chunkduration=8 => 146sec, 19 RDS +26 plain carriers; 148s, 18+27; minT=15*8=120s
# mpxsrate_chunkbw_factor="10"; RTL_BW_OPT="-w 1800000" # +/-750000 Hz, N= 16, chunkbw= 1710 kHz; chunkduration=8 => 140sec, 17 RDS +33 plain carriers; 141s, 18+38; minT=13*8=108s
# mpxsrate_chunkbw_factor="11"; RTL_BW_OPT="-w 2080000" # +/-850000 Hz, N= 18, chunkbw= 1881 kHz; chunkduration=8 => 125sec, 12 RDS +30 plain carriers; 123s, 14+25; minT=12*8=96s

  mpxsrate_chunkbw_factor="7";  RTL_BW_OPT="-w 1200000"

fi


# options to rtl_sdr, e.g. select device with option '-d <serial>'.
# do NOT use options '-s' (samplerate), '-n' (number of samples), '-f' (frequency) or '-w' (bandwidth) here!
#   reuse devicename from config: \${FMLIST_FM_RTLSDR_DEV}

RTLSDR_OPT=""
if [ ! -z "\${FMLIST_FM_RTLSDR_DEV}" ]; then
  RTLSDR_OPT="\${RTLSDR_OPT} -d \${FMLIST_FM_RTLSDR_DEV}"
fi

EOF


cat - <<EOF >/home/${FMLIST_SCAN_USER}/.config/fmlist_scan/dabscan.inc

# file with channels to scan
chanlist="dab_chanlist.txt"

# verifiable TII (statistics without '-x' option) requires much time: that is why to increase -A from 2000 to 12000
#   with option '-x', activation enhanced tii algorithm with quality values, reduced -A to 6000 ms
#   options -t,  -a and -r specify how tii statistics should work ..

DABOPT="-Q -E 3 -W 5000 -A 6000 -c -t 5 -a 0.8 -r 5 -x"

if [ "\${GPSSRC}" = "static" ]; then
  # spend more time on scanning in static environment
  DABOPT="-Q -E 3 -W 8000 -A 12000 -c -t 10 -a 0.9 -r 10 -x"
fi

# select rtlsdr device with option '-s <serial>'.
#   program 'rtl_test' will list all devices with their serial numbers 'SN'.
#   in case your serial numbers are not unique, you can modify these with 'rtl_eeprom'.
#   reuse devicename from config: \${FMLIST_DAB_RTLSDR_DEV}

if [ ! -z "\${FMLIST_DAB_RTLSDR_DEV}" ]; then
  DABOPT="\${DABOPT} -s \${FMLIST_DAB_RTLSDR_DEV}"
fi

EOF


cat - <<EOF >/home/${FMLIST_SCAN_USER}/.config/fmlist_scan/dab_chanlist.txt
5A
5B
5C
5D
6A
6B
6C
6D
7A
7B
7C
7D
8A
8B
8C
8D
9A
9B
9C
9D
10A
10B
10C
10D
11A
11B
11C
11D
12A
12B
12C
12D
13A
13B
13C
13D
13E
13F
EOF


chown ${FMLIST_SCAN_USER}:${FMLIST_SCAN_USER} /home/${FMLIST_SCAN_USER}/.config/fmlist_scan/config
chown ${FMLIST_SCAN_USER}:${FMLIST_SCAN_USER} /home/${FMLIST_SCAN_USER}/.config/fmlist_scan/fmscan.inc
chown ${FMLIST_SCAN_USER}:${FMLIST_SCAN_USER} /home/${FMLIST_SCAN_USER}/.config/fmlist_scan/dabscan.inc
chown ${FMLIST_SCAN_USER}:${FMLIST_SCAN_USER} /home/${FMLIST_SCAN_USER}/.config/fmlist_scan/dab_chanlist.txt

